var Nightmare = require('nightmare');
var nightmare = Nightmare({ show: true });
//google de
var fs = require('fs');
var readline = require('readline');
var google = require('googleapis');
var googleAuth = require('google-auth-library');

nightmare
  .goto('https://www.fastweb.com/login')
  .wait(2000)
  //wait 2 seconds for page to fully load

//.click('input#login')
  //fill out the username with email adress
  .type('input#login', 'alecksonnyamwaya@gmail.com')

  //select password field
//  .click('input#password')
  //type the given password into the field
  .type('input#password', 'elephant21')

  //submit the form so we can log in
.click('input#user_form_submit')


.wait(4000)
.click('span#number_awards')

//wait 2 seconds before we start scraping
  .wait(2000)
  .evaluate(function gatherSchoolarships() {
    var fastwebSchoolarships = [];
    //create an array to hold all the awardsd aka schoolarships  we find by the below codoe
    $('.clearxxx').each(function getEachSchoolarship() {
      item = {}
      item['title'] = $(this).find('a').text();
      item['link'] = $(this).find('a').attr('href');
      item['award_size'] = $(this).find('.award').text()
      item['deadline'] = $(this).find('.deadline').text()
      fastwebSchoolarships.push(item)
    })
    return fastwebSchoolarships
  })
  .end()

  //then add it to google
  .then(function(result){
    for(fastwebSchoolarships in result){
      //do googel stuff


      // If modifying these scopes, delete your previously saved credentials
      // at ~/.credentials/sheets.googleapis.com-nodejs-quickstart.json
      var SCOPES = ['https://www.googleapis.com/auth/spreadsheets '];
      var TOKEN_DIR = (process.env.HOME || process.env.HOMEPATH ||
          process.env.USERPROFILE) + '/.credentials/';
      var TOKEN_PATH = TOKEN_DIR + 'sheets.googleapis.com-nodejs-quickstart.json';

      // Load client secrets from a local file.
      fs.readFile('client_secret.json', function processClientSecrets(err, content) {
        if (err) {
          console.log('Error loading client secret file: ' + err);
          return;
        }
        // Authorize a client with the loaded credentials, then call the
        // Google Sheets API.
        authorize(JSON.parse(content), appendData);
      });

      /**
       * Create an OAuth2 client with the given credentials, and then execute the
       * given callback function.
       *
       * @param {Object} credentials The authorization client credentials.
       * @param {function} callback The callback to call with the authorized client.
       */
      function authorize(credentials, callback) {
        var clientSecret = credentials.installed.client_secret;
        var clientId = credentials.installed.client_id;
        var redirectUrl = credentials.installed.redirect_uris[0];
        var auth = new googleAuth();
        var oauth2Client = new auth.OAuth2(clientId, clientSecret, redirectUrl);

        // Check if we have previously stored a token.
        fs.readFile(TOKEN_PATH, function(err, token) {
          if (err) {
            getNewToken(oauth2Client, callback);
          } else {
            oauth2Client.credentials = JSON.parse(token);
            callback(oauth2Client);
          }
        });
      }

      /**
       * Get and store new token after prompting for user authorization, and then
       * execute the given callback with the authorized OAuth2 client.
       *
       * @param {google.auth.OAuth2} oauth2Client The OAuth2 client to get token for.
       * @param {getEventsCallback} callback The callback to call with the authorized
       *     client.
       */
      function getNewToken(oauth2Client, callback) {
        var authUrl = oauth2Client.generateAuthUrl({
          access_type: 'offline',
          scope: SCOPES
        });
        console.log('Authorize this app by visiting this url: ', authUrl);
        var rl = readline.createInterface({
          input: process.stdin,
          output: process.stdout
        });
        rl.question('Enter the code from that page here: ', function(code) {
          rl.close();
          oauth2Client.getToken(code, function(err, token) {
            if (err) {
              console.log('Error while trying to retrieve access token', err);
              return;
            }
            oauth2Client.credentials = token;
            storeToken(token);
            callback(oauth2Client);
          });
        });
      }

      /**
       * Store token to disk be used in later program executions.
       *
       * @param {Object} token The token to store to disk.
       */
      function storeToken(token) {
        try {
          fs.mkdirSync(TOKEN_DIR);
        } catch (err) {
          if (err.code != 'EEXIST') {
            throw err;
          }
        }
        fs.writeFile(TOKEN_PATH, JSON.stringify(token));
        console.log('Token stored to ' + TOKEN_PATH);
      }

      /**
       * Print the names and majors of students in a sample spreadsheet:
       * https://docs.google.com/spreadsheets/d/1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms/edit
       */
      function listMajors(auth) {
        var sheets = google.sheets('v4');
        sheets.spreadsheets.values.get({
          auth: auth,
          spreadsheetId: '13qqcZGMGnBIUo1OhCfRJhp9TQY5ljRVNecczjz4Kzh4',
          range: 'Sheet1!A2:G',
          resource: {
            values: [ ["Void", "Canvas", "Website"], ["Paul", "Shan", "Human"] ]
          }
        }, function(err, response) {
          if (err) {
            console.log('The API returned an error: ' + err);
            return;
          }
          var rows = response.values;
          if (rows.length == 0) {
            console.log('No data found.');
          } else {
            console.log("Appended");

            console.log('Title, Link, Deadline, Link:');
            // for (var i = 0; i < rows.length; i++) {
            //   var row = rows[i];
            //   // Print columns A and E, which correspond to indices 0 and 4.
            //   console.log('%s, %s', row[0], row[2], row[4], row[6]);
            // }
          }
        });
      }

      function appendData(auth) {
        var sheets = google.sheets('v4');
        sheets.spreadsheets.values.append({
          auth: auth,
          spreadsheetId: '13qqcZGMGnBIUo1OhCfRJhp9TQY5ljRVNecczjz4Kzh4',
          range: 'Sheet1!A2:G', //Change Sheet1 if your worksheet's name is something else
          valueInputOption: "USER_ENTERED",
          resource: {
              "values": [
                [
                  result[fastwebSchoolarships].title,
                  result[fastwebSchoolarships].link,
                  result[fastwebSchoolarships].award_size,
                  result[fastwebSchoolarships].deadline,

                ]
              ]
          }
        }, (err, response) => {
          if (err) {
            console.log('The API returned an error: ' + err);
            return;
          } else {
              console.log("Appended");
          }
        });
      }

      //end googel stuff
      console.log(result[fastwebSchoolarships].title);
      console.log(result[fastwebSchoolarships].link);
      console.log(result[fastwebSchoolarships].award_size);
      console.log(result[fastwebSchoolarships].deadline);

      console.log('\n');
    }
  })
